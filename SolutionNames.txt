task1519 - Разные методы для разных типов.
    Определение принадлежности строки к String, Double, Integer, Short через регулярные выражения
task1521 - Перегрузка методов.
task1531 - Факториал через рекурсию с использованием BigInteger
***************************

task 1601 - Threads

task1613 - Big Ben Clock - через условия
task1615 - Аэропорт - Взлёт 3х самолётов с ожиданием полосы
task1628 - Один поток ввода используют три потока одновременно
task1630 - Считывание двух файлов построчно двумя потоками
task1631 - Фабрика (через if)
task1632 - 5 разных потоков с разными действиями, не зависят друг от друга
***************************

task 1700 - Threads (продолжение) - Synchronized
task1710 - CRUD (база данных в ArrayList, имя, пол, дата рождения (Date))
task1711 - CRUD2 (база данных в ArrayList, имя, пол, дата рождения (Date) добавляется сразу много объектов через командную строку)
task1712 - Ресторан (взаимодействуют 7 классов)
task1714 - Beach - Comparator
task1715 - Apteka - два потока
task1720 - Bankomat - три протока вносят и тратят деньги
task1721 - Транзакционность. Сделать метод joinData транзакционным, т.е. если произошел сбой, то данные не должны быть изменены.
            Данные из двух файлов считываются в два списка, которые затем сравниваются
task1722 - четыре потока заполняют массив
**************************

task 1800 - Потоки ввода-вывода
task1801 - Чтение побайтово из файла, нахождение максимального байта
task1803 - Чтение побайтово из файла, нахождение байта (-ов) с максимальным количеством повторов
task1804 - Чтение побайтово из файла, нахождение байта (-ов) с минимальным количеством повторов (запрещены статические поля по условию задачи)
task1805 - Чтение побайтово из файла, сортировка байтов по возрастанию без учета повторов
task1807 - Подсчет количества запятых в файле
task1808 - Считывание из файла побайтово и запись в два других файла
task1809 - Считывание из файла побайтово и запись в файл в обратном порядке
task1812 - Паттерн Decorator (Wrapper, Обертка)
task1816 - Считывание имени файла из параметров, переданных в main() и подсчет в файле кол-ва букв
task1817 - --""-- , подсчет в файле кол-ва символов и вычисление процента пробелов.
           !!!!! ОКРУГЛЕНИЕ double через DigDecimal !!!!!
task1820 - Считывание double чисел из 1го файла, округление до целых и запись во 2й файл
            !!!!! ОКРУГЛЕНИЕ double через int num = (int) Math.round(); !!!!!
task1821 - Встречаемость символов. Программа запускается с одним параметром - именем файла, который содержит английский текст.
           Посчитать частоту встречания каждого символа.
           Отсортировать результат по возрастанию кода ASCII (почитать в инете).
           !!!!! Применяем TreeMap т.к. он отсортирован по ключу !!!!!
task1822 - Считать с консоли имя файла.
           Найти в файле информацию, которая относится к заданному id, и вывести ее на экран в виде, в котором она записана в файле.
           Программа запускается с одним параметром: id (int).
            Каждая строка разбивается на массив строк (по условию это не нужно)
task1823 - Нити и байты
            Читайте с консоли имена файлов, пока не будет введено слово "exit".
            Передайте имя файла в нить ReadThread.
            Нить ReadThread должна найти байт, который встречается в файле максимальное число раз, и добавить его в словарь resultMap,
            где параметр String - это имя файла, параметр Integer - это искомый байт.
            Закрыть потоки.
task1824 -  Файлы и исключения
            Читайте с консоли имена файлов.
            Если файла не существует (передано неправильное имя файла), то перехватить исключение FileNotFoundException, вывести в консоль переданное неправильное имя файла и завершить работу программы.
            !!! Используется try - with - resources !!!
task1825 -  Собираем файл
            Собираем файл из кусочков.
            Считывать с консоли имена файлов.
            Каждый файл имеет имя: [someName].partN.
            Например, Lion.avi.part1, Lion.avi.part2, ..., Lion.avi.part37.
            Имена файлов подаются в произвольном порядке. Ввод заканчивается словом "end".
            В папке, где находятся все прочтенные файлы, создать файл без суффикса [.partN].
            Например, Lion.avi.
            В него переписать все байты из файлов-частей используя буфер.
            Файлы переписывать в строгой последовательности, сначала первую часть, потом вторую, ..., в конце - последнюю.
            Закрыть потоки.
task1826 -  Шифровка
            Придумать механизм шифровки/дешифровки.
            Программа запускается с одним из следующих наборов параметров:
            -e fileName fileOutputName
            -d fileName fileOutputName
            где:
            fileName - имя файла, который необходимо зашифровать/расшифровать.
            fileOutputName - имя файла, куда необходимо записать результат шифрования/дешифрования.
            -e - ключ указывает, что необходимо зашифровать данные.
            -d - ключ указывает, что необходимо расшифровать данные.
task1827 -  Прайсы
            CrUD для таблицы внутри файла.
            Считать с консоли имя файла для операций CrUD.
            Программа запускается со следующим набором параметров:
            -c productName price quantity
            Значения параметров:
            где id - 8 символов.
            productName - название товара, 30 символов.
            price - цена, 8 символов.
            quantity - количество, 4 символа.
            -c - добавляет товар с заданными параметрами в конец файла, генерирует id самостоятельно, инкрементируя максимальный id, найденный в файле.
            В файле данные хранятся в следующей последовательности (без разделяющих пробелов):
            id productName price quantity
            Данные дополнены пробелами до их длины.
task1828 -  Прайсы 2
            CrUD для таблицы внутри файла
            Считать с консоли имя файла для операций CrUD
            Программа запускается с одним из следующих наборов параметров:
            -u id productName price quantity
            -d id
            Значения параметров:
            где id - 8 символов
            productName - название товара, 30 символов
            price - цена, 8 символов
            quantity - количество, 4 символа
            -u - обновляет данные товара с заданным id
            -d - производит физическое удаление товара с заданным id (все данные, которые относятся к переданному id)
            В файле данные хранятся в следующей последовательности (без разделяющих пробелов):
            id productName price quantity
            Данные дополнены пробелами до их длины
task1901...  - АДАПТЕРЫ